---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-world-sidecar
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  rules:
  - host: hello-world-sidecar.##REPLACE-WITH-KUBERNETES-HOST##
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: 
            name: hello-world-sidecar
            port: 
              number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: hello-world-sidecar
  labels:
    run: hello-world-sidecar
spec:
  selector:
    app: hello-world-sidecar
  ports:
    - protocol: TCP
      port: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world-sidecar
  labels:
    app: hello-world-sidecar
spec:
  # replicas: 2
  selector:
    matchLabels:
      app: hello-world-sidecar
  template:
    metadata:
      labels:
        app: hello-world-sidecar
    spec:
      containers:

      ## The app itself
      - name: app
        image: "registry-##REPLACE-WITH-KUBERNETES-HOST##/go-hello-world:latest"
        env:
        - name: STARTUP_SEC
          value: "20"
        - name: REQUEST_SEC
          value: "3"
        - name: SLEEP_SEC
          value: "5"
        - name: GRACEFUL_SHUTDOWN_SEC
          value: "20"
        ports:
        - containerPort: 8080
          protocol: TCP

        ## Probe section
        livenessProbe:
          httpGet:
            path: /status
            port: 8080
            scheme: HTTP
          failureThreshold: 2
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /status
            port: 8080
            scheme: HTTP
          failureThreshold: 2
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 1
        
        ## Lifecycle event section
        lifecycle:
          preStop:
            # because we have a sleep request, (sleeping SLEEP_SEC sec) in the service, 
            # we use that request here: he pod will get SIGTERM after the preStop Hook has been executed
            httpGet:
              path: /sleep
              port: 8080


      ## The sidecar
      - name: sidecar
        image: "registry-##REPLACE-WITH-KUBERNETES-HOST##/go-hello-world-sidecar:latest"

        ## Lifecycle event section
        lifecycle:
          preStop:
            # the sleep in the sidecar has to be shorter than the preStop in the service
            exec:
              command: ["/bin/sh", "-c", "sleep 2"]

      # preStop Hook is 5 sec, graceful shutdown in app is 20 sec, leading to:
      terminationGracePeriodSeconds: 30